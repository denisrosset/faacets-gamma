TODO

Restore Grp JSON encoders/decoders.

Complication: write a "safe" Grp decoder that does not hang when the provided order is invalid

/*
  implicit def grpDecode[G:GrpBuilder:DecodeJson]: DecodeJson[Grp[G]] =
    jdecode2L( (generators: Vector[G], order: BigInt) => Grp.fromGeneratorsAndOrder(generators, order) )("generators", "order")

  implicit def grpEncode[G:EncodeJson:NiceGenerators]: EncodeJson[Grp[G]] =
    jencode2L( (g: Grp[G]) => (NiceGenerators[G].niceGenerators(g).toList, g.order) )("generators", "order")
*/
